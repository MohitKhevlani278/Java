QUESTION :- 
1)DOES JVM CREATE OBJECT OF MAIN CLASS:-
- NO because main() is static method can be called without any instance

2)How is java platform independant :-
- The byte code generated by source code compilation would run in any operating system, but the JVM present in a machine differs for each operating system. 
Note :- java is platformindependant while jvm is platformdependant becuase jvm depends on os

3)Is main method complusory in java?
->Doesn't But, while execution JVM searches for the main method. In the Java the main method is the entry point but 
  Yes, we can execute a java program without a main method by using a static block. 
  Static block in Java is a group of statements that gets executed only once when the class is loaded into the memory by Java ClassLoader, 
  It is also known as a static initialization block.
  Static initialization block is going directly into the stack memory.
  Work until java 1.6 now java 7 check main method

4)Is file name and class name required same or not?
- If there is no public class then file name may be different from the class name in Java.
  In case there is a public class then it is enforced that the file name is same as the public class.
  Even, in the case, where the file name is different, after compilation .class files have the same name as the class names.
  Having the same name as class name is how the JVM will know which class to load and where to look for entry point (main method)

5)Can we comile and run java file from other directories?
- Use the -d command line parameter with javac to tell it what directory you'd like to store the compiled class files in. 
  Then, to run the program, simply include -cp after java and directorys classpath:
  javac -d some/directory myjavafile.java (-d directory)
  java -cp some/directory myjavafile