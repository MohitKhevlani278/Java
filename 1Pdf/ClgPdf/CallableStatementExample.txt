Prepared Statement : 
import java.sql.*;  
class InsertPrepared{  
public static void main(String args[]){  
try{  
Class.forName("oracle.jdbc.driver.OracleDriver");  
  
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","oracle");  
  
PreparedStatement stmt=con.prepareStatement("insert into Emp values(?,?)");  
stmt.setInt(1,101);//1 specifies the first parameter in the query  
stmt.setString(2,"Ratan");  
  
int i=stmt.executeUpdate();  
System.out.println(i+" records inserted");  
  
con.close();  
  
}catch(Exception e){ System.out.println(e);}  
  
}  
}



Callable Statement Practice

CallableStatement interface is used to call the stored procedures and functions.

We can have business logic on the database by the use of stored procedures and functions that will make the performance better because these are precompiled.


is used to perform business logic.
must not have the return type.
may return 0 or more values.
We can call functions from the procedure.
Procedure supports input and output parameters.
Exception handling using try/catch block can be used in stored procedures.

public CallableStatement prepareCall("{ call procedurename(?,?...?)}"); 
CallableStatement stmt=con.prepareCall("{call myprocedure(?,?)}"); 

create or replace procedure "INSERTR"  
(id IN NUMBER,  
name IN VARCHAR2)  
is  
begin  
insert into user values(id,name);  
end; 

Create Table: 
    create table user(id number(10), name varchar2(200));  

    import java.sql.*;  
    public class Proc {  
    public static void main(String[] args) throws Exception{  
      
    Class.forName("oracle.jdbc.driver.OracleDriver");  
    Connection con=DriverManager.getConnection(  
    "jdbc:oracle:thin:@localhost:1521:xe","system","oracle");  
      
    CallableStatement stmt=con.prepareCall("{call insertR(?,?)}");  
    stmt.setInt(1,1011);  
    stmt.setString(2,"Amit");  
    stmt.execute();  
      
    System.out.println("success");  
    }  
    }  


(2) 
create or replace function sum4  
(n1 in number,n2 in number)  
return number  
is   
temp number(8);  
begin  
temp :=n1+n2;  
return temp;  
end;  

import java.sql.*;  
  
public class FuncSum {  
public static void main(String[] args) throws Exception{  
  
Class.forName("oracle.jdbc.driver.OracleDriver");  
Connection con=DriverManager.getConnection(  
"jdbc:oracle:thin:@localhost:1521:xe","system","oracle");  
  
CallableStatement stmt=con.prepareCall("{?= call sum4(?,?)}");  
stmt.setInt(2,10);  
stmt.setInt(3,43);  
stmt.registerOutParameter(1,Types.INTEGER);  
stmt.execute();  
  
System.out.println(stmt.getInt(1));  
          
}  
}
